package main

import "fmt"

//Что выведет программа?
// Объяснить порядок выполнения defer функций и итоговый вывод.

func test() (x int) { //Здесь мы инициализируем (инициализируется нулевым значением) именнованный возвращаемый аргумент
	defer func() { //отложенная функция которая будет выполнена после 13 строки, но до возвращения значения из test()
		x++
	}()
	x = 1 //Здесь мы присваиваем значение возвращаемому аргументу, и когда будет выполнен defer x=1, и так как произойдет замыкание он захватит значение и вернет 2 как результат выполнения test()
	return
}

func anotherTest() int { // Здесь нет именнованного аргумента, поэтому заходя в defer будет использованно значение из строки 17
	var x int
	defer func() {
		x++
	}()
	x = 1    // здесь простая инициализация переменной
	return x // здесь запоминается значение 1 как возвращаемое и потом выполнение x++ не влияет
}

func main() {
	fmt.Println(test())        // 2
	fmt.Println(anotherTest()) //1
}
