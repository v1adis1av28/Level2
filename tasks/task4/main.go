package main

func main() {
	ch := make(chan int)
	go func() {
		for i := 0; i < 10; i++ {
			ch <- i
		}
		//*(решение) close(ch)
	}() // Данная горутина будет писать значеняи пока не дойдет до конца цикла

	for n := range ch { // Здесь чтение из канала будет происходить пока не будет закрыт канал в который мы пишем,
		println(n) // Поэтому вот здесь возникает дедлок, потому что основная горутина ожидает данные на чтение, но так как уже закончился цикл
		// и записывать больше нечего, возникает подобная ошибка "fatal error: all goroutines are asleep - deadlock!"
	}
	// Решение проблемы это закрывать канал, вместе с горутиной которая записывает данные в канал

	//Или альтернативное решщение, но менее оптимальное это не использовать цикл range и просто итерироваться по кол-ву итераций, что и в анонимной горутине на строке 5
}

//вывод программы
// 0
// 1
// 2
// 3
// 4
// 5
// 6
// 7
// 8
// 9
// fatal error: all goroutines are asleep - deadlock!
