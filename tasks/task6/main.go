package main

import (
	"fmt"
)

//Что выведет программа?

//Объяснить поведение срезов при передаче их в функцию.

func main() {
	var s = []string{"1", "2", "3"} // len = 3 cap= 3
	modifySlice(s)
	fmt.Println(s)
} //вывод: [3 2 3]

//структура slice: ссылка на базовый массив(на первый его элемент)
// длина
// capacity - значение эл-ов которое может храниться в массиве без аллокации новой памяти,
// При передаче в ф-ю слайсе по значению изменение длины или капасити не отразится на самом срезе
// только изменения значений самого среза могут быть отразится

// len = 3 cap = 4
func modifySlice(i []string) { // передаем срез по значению, значит ф-я копирует значение длины и капасити, но изменения их не повлияют на базовый масив
	i[0] = "3"         //изменения отразятся на срез в main
	i = append(i, "4") // iCopy = [3,2,3,4] len = 4 cap > 3 -> аллоцируется новая память, туда перегоняются данные из массива s и теперь i = указывает на новый массив
	i[1] = "5"         // icopy = 3 5 3 4
	i = append(i, "6") // iCopy = [3 5 3 4 6] len= 5 cap = 6
} // по сути все здесь затирается, так как лен и капасити просто удаляются из стека, а ссылка на массив который аллоцировался на 26 строке, будет почищен GC из-за того что на него никто не ссылается
